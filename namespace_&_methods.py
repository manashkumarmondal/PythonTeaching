# -*- coding: utf-8 -*-
"""namespace & methods.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJhirEsIdAtSKvrNKoWuh5zgGTPyB_42
"""

#understanding class namespace
class Student:
  n=10 #class veriable 


#acess class variable inthe class namespace
print(Student.n)  #display 10
Student.n+=6      #modify it in class namespace
print(Student.n)

#modified class var seen in all object
s1=Student()
print(s1.n)
s2=Student()
print(s2.n)

#understanding instance namespace

class Demo:
  n=10

d1=Demo()
print(d1.n)
d1.n+=7
print(d1.n)

d2=Demo()
print(d2.n)

class Student:
  def __init__(self,n='',m=0): #constructor
    self.name=n
    self.marks=m

  def display(self): #instance method
    print('Hi',self.name)
    print("Your marks", self.marks)

  def calculate(self):
    if(self.marks>=600):
      print("you got first class")
    elif(self.marks>=500):
      print("you got second class")
    elif(self.marks>=350):
      print("You got third class")
    else:
      print("you are failed")

n=int(input("How many student: "))

i=0
while (i<n):
  name=input('Enter student name')
  marks=int(input('Student marks'))

  s=Student(name, marks)
  s.display()
  s.calculate()
  i+=1
  print("------------------------------")

#class method
class Bird:
  wings=2


  @classmethod
  def fly(cls, name):
    print('{} flies with {} wings'.format(name, cls.wings))

Bird.fly("Pigeon")
Bird.fly('Crow')
Bird.fly('Somnath')

#static method
class Myclass:
  n=0
  #constructor
  def __init__(self):
    Myclass.n=Myclass.n+1
   
  @staticmethod
  def noObject():
    print("Numner of instance is ctrated", Myclass.n )

obj1=Myclass()
obj2=Myclass()
obj3=Myclass()
Myclass.noObject()