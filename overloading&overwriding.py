# -*- coding: utf-8 -*-
"""Untitled41.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fqNsb5EZCYP3P9k-MwcyGVARH07ncxSz
"""

#overloading > operator

class Ramayan:
  def __init__(self, pages):
    self.pages=pages

  def __gt__(self, other):
    return self.pages > other.pages

class Mahabharat:
  def __init__(self, pages):
    self.pages=pages


r=Ramayan(10800)
m=Mahabharat(1500)

if(r>m):
  print("Ramayan has more pages")
else:
  print("Mahabharat has more pages")

#overloading * operator

class Employee:
  def __init__(self,name, salary):
    self.name=name
    self. salary=salary

  def __mul__(self, other):
    return self.salary * other.days

class Attendance:
  def __init__(self, name, days):
    self.name=name
    self.days=days

x1=Employee('Swarnali', 700.00)
x2=Attendance('Swarnali',30)    

print("This month total salary =", x1*x2)

"""**Method overloading**"""

#method overloading
class Myclass:
  def sum(self, a=None, b=None, c=None):
    if(a!=None and b!=None and c!=None):
      print("Sum of three is", a+b+c)
    elif (a!=None and b!=None):
      print("Sum of two is =", a+b)
    else:
      print("Please enter two or three arguments")


m=Myclass()
m.sum(10,20,30)
m.sum(5,9)
m.sum(4)

#Method overriding

import math
class Square:
  def area1 (self, x):
    print("Squre area=", x*x)

class Circle(Square):
  def area(self, x):
    print('Circle area=',(math.pi *x*x))


s=Square()
s.area1(5)



c= Circle()   
c.area(10)
c.area1(6)