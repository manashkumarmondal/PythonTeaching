# -*- coding: utf-8 -*-
"""Untitled44.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BJ1VzlgAvPTFRF7LfOfECCSJolmXZM2U
"""

import math
class Square:
  def area(self, x):
    print('Square area=',x*x)


class Circle(Square):
  # def area(self, x):
  #   print('Circle area=', math.pi*x*x)
  pass
  

c=Circle()
c.area(5)

class Myclass:
  def calculate(self, x):
    print('Sqaure area=',x*x)



obj1=Myclass()
obj1.calculate(6) 

obj2=Myclass()
obj2.calculate(5)

obj3=Myclass()
obj3.calculate(4)

from abc import ABC,abstractmethod
import math
class Myclass(ABC):
  @abstractmethod
  def calculate (self, x):
    pass

class Sub1(Myclass):
  def calculate(self,x):
    print('Square value=',x*x)

class Sub2(Myclass):
  def calculate(self, x):
    print('Squre root value=',math.sqrt(x))

class Sub3(Myclass):
  def calculate(self, x):
    print("Cube value=", x*x*x)  

ob1=Sub1()
ob1.calculate(5)

ob2=Sub2()
ob2.calculate(64)

ob3=Sub3()
ob3.calculate(3)

from abc import*
class Car(ABC):
  def __init__(self,regno):
    self.regno=regno

  def openTank(self):
    print('Fill the fuel into the tank')
    print('for the car wwith regno',self.regno)

  @abstractmethod 
  def steering(self):
    pass

  @abstractmethod
  def breaking(self):
    pass 




class Maruti(Car):
  def steering(self):
    print("Maruti use manual steering")
    print('Drive the car')

  def breaking(self):
    print("Maruti use hydralic breaks")
    print('Apply breaks and stop it')



class Santro(Car):
  def steering(self):
    print('Santro uses power steering')
    print('Drive the car')

  def breaking(self):
    print("Santro uses ags breaks")
    print('Apply breaks and stop it')

s=Santro(7070)
s.openTank()
s.steering()
s.breaking()



print('---------------------------------------')


m=Maruti(10001)
m.openTank()
m.steering()
m.breaking()